---
- name: "Playbook to provision Thoth and Amun"
  tags:
    - openshift
    - thoth

  hosts: localhost
  connection: local
  gather_facts: false

  # vars:
  #   migrated to group_vars/all/vars

  roles:
    # create all the templates and imagestreams
    - role: thoth-station.core_templates
      namespace: "{{ infra_namespace }}"
      token: "{{ openshift_api_token }}"
    - role: thoth-station.core_imagestreams
      namespace: "{{ infra_namespace }}"
      THOTH_INFRA_NAMESPACE: "{{ infra_namespace }}" # FIXME here is something wrong...

    # create configmap and secret required by all components
    - role: thoth-station.configmaps_and_secrets
      THOTH_APP_SECRET_KEY: "{{ app_secret }}"
      THOTH_SECRET: "{{ app_secret }}"
      THOTH_CEPH_SECRET_KEY: "{{ ceph_secret_key }}"
      THOTH_CEPH_KEY_ID: "{{ ceph_key_id }}"
      SENTRY_DSN: "{{ sentry_dsn }}"
      ZUUL_INCOMING_WEBHOOK_SECRET: "{{ zuul_incoming_webhook_secret }}"      
      THOTH_DEPLOYMENT_NAME: "{{ deployment_name }}"
      TARGET_NAMESPACE: "{{ middletier_namespace }}" # FIXME
      THOTH_INFRA_NAMESPACE: "{{ infra_namespace }}"
      THOTH_FRONTEND_NAMESPACE: "{{ frontend_namespace }}"
      THOTH_MIDDLETIER_NAMESPACE: "{{ middletier_namespace }}"
      THOTH_BACKEND_NAMESPACE: "{{ backend_namespace }}"
      THOTH_S3_ENDPOINT_URL : "{{ s3_endpoint_url }}"
      THOTH_CEPH_BUCKET: "{{ ceph_bucket }}"
      # A full URL to AMUN API including API version - e.g. http:/amun-api/api/v1
      AMUN_API_URL: "{{ amun_api_url }}"
      # A full URL to Isis API including API version - e.g. http:/amun-api/api/v1
      ISIS_API_URL: "{{ isis_api_url }}"
      PROMETHEUS_PUSHGATEWAY_HOST: "{{ prometheus_pushgateway_host }}"
      PROMETHEUS_PUSHGATEWAY_PORT: "{{ prometheus_pushgateway_port }}"

    # Deploy Metrics Exporter
    - role: thoth-station.metrics_exporter
      project_name: "thoth-test-core"

    # create the CronJobs we need
    - role: thoth-station.cronjob
      namespace: "{{ frontend_namespace }}"
      cronjob_name: "package-releases"
      suspend: false
    - role: thoth-station.cronjob
      namespace: "{{ frontend_namespace }}"
      cronjob_name: "cve-update"
      suspend: False
    - role: thoth-station.cronjob
      namespace: "{{ frontend_namespace }}"
      cronjob_name: "graph-refresh"
      suspend: false
    # This is provisioning to a single namespace, so skipping the cleanup job deployments. see below

    # deploy Amun and all it's components
    - role: thoth-station.amun
      AMUN_INFRA_NAMESPACE: "{{ infra_namespace }}"
      AMUN_API_NAMESPACE: "{{ amun_api_namespace }}"
      AMUN_INSPECTION_NAMESPACE: "{{ amun_inspection_namespace }}"
      AMUN_API_APP_SECRET_KEY: "{{ amun_app_secret }}"
      PROMETHEUS_PUSHGATEWAY_HOST: "{{ prometheus_pushgateway_host }}"
      PROMETHEUS_PUSHGATEWAY_PORT: "{{ prometheus_pushgateway_port }}"
      SENTRY_DSN: "{{ sentry_dsn }}"

  tasks:
    - name: "creating Thoth-Ops ServiceAccounts in {{ item }} Project"
      k8s_raw:
        state: present
        definition:
          api_version: v1
          kind: ServiceAccount
          metadata:
            namespace: "{{ item }}"
            name: "thoth-ops"
            labels:
              app: thoth-ops
              component: serviceaccount
      with_items:
        - "{{ infra_namespace }}"

    - name: "granting Admin Role to ServiceAccount 'thoth-ops'"
      command: "oc policy add-role-to-user admin --serviceaccount=thoth-ops --namespace {{ infra_namespace }}"

    - name: "creating ServiceAccounts and RoleBindings in {{ frontend_namespace }}"
      shell: oc process --namespace="{{ infra_namespace  }}" thoth-core \
        -p THOTH_FRONTEND_NAMESPACE="{{ frontend_namespace }}" \
        -p THOTH_MIDDLETIER_NAMESPACE="{{ middletier_namespace }}" \
        -p THOTH_BACKEND_NAMESPACE="{{ backend_namespace }}" | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "create Job Templates in {{ infra_namespace  }}"
      command: "oc create --save-config=true --namespace {{ infra_namespace  }} --filename {{ item }}"
      with_items:
        - https://raw.githubusercontent.com/thoth-station/package-extract/master/openshift/job-template.yaml
        - https://raw.githubusercontent.com/thoth-station/solver/master/openshift/job-template.yaml
        - https://raw.githubusercontent.com/thoth-station/adviser/master/openshift/job-dependencyMonkey-template.yaml
        - https://raw.githubusercontent.com/thoth-station/adviser/master/openshift/job-adviser-template.yaml
        - https://raw.githubusercontent.com/thoth-station/adviser/master/openshift/job-provenanceChecker-template.yaml

    - name: "deploy Result API to {{ middletier_namespace }}"
      shell: "oc process --namespace {{ infra_namespace  }} result-api-deployment | oc apply --namespace {{ middletier_namespace }} -f -"

    - name: "deploy User API to {{ frontend_namespace }} (dependencies: dgraph)"	
      shell: oc process --namespace "{{ infra_namespace  }}" user-api-deployment | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "deploy Isis API to {{ frontend_namespace }}"
      shell: oc process --namespace "{{ infra_namespace  }}" isis-api-deployment | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "deploy Management API to {{ frontend_namespace }}"
      shell: oc process --namespace "{{ infra_namespace  }}" management-api-deployment | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "create Thoth Core component's BuildConfigs in {{ infra_namespace }}"
      shell: "oc process --namespace {{ infra_namespace  }} {{ item }} | oc apply --namespace {{ infra_namespace }} -f -"
      with_items:
        - "package-releases-buildconfig"
        - "package-extract-buildconfig"
        - "graph-refresh-buildconfig"
        - "graph-sync-buildconfig"
        - "adviser-buildconfig"
        - "solver-buildconfig"
        - "cve-update-buildconfig"
        - "result-api-buildconfig"
        - "user-api-buildconfig"
        - "cleanup-buildconfig"
        - "isis-api-buildconfig"
        - "management-api-buildconfig"
        - "graph-sync-scheduler-buildconfig"
        - "build-watcher-buildconfig"

    # TODO the following tasks could be moved into their own roles....

    - name: "create Graph Sync Scheduler ImageStream"
      shell: oc process --namespace "{{ infra_namespace  }}" "{{ item }}" | oc apply --namespace "{{ frontend_namespace }}" -f -
      with_items:
        - "graph-sync-scheduler-imagestream"
        - "build-watcher-imagestream"

    - name: "deploy Graph Sync Scheduler for Middletier"
      shell: oc process --namespace "{{ infra_namespace }}" graph-sync-scheduler-deployment \
        -p THOTH_SERVICE_ACCOUNT_NAME="inspector" \
        -p THOTH_SCHEDULER_NAMESPACE="{{ middletier_namespace }}" \
        -p THOTH_GRAPH_SYNC_NAMESPACE="{{ middletier_namespace }}" | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "deploy Graph Sync Scheduler to Middletier"
      shell: oc process --namespace "{{ infra_namespace }}" graph-sync-scheduler-deployment \
        -p THOTH_SERVICE_ACCOUNT_NAME="inspector" \
        -p THOTH_SCHEDULER_NAMESPACE="{{ backend_namespace }}" \
        -p THOTH_GRAPH_SYNC_NAMESPACE="{{ backend_namespace }}" | oc apply --namespace "{{ frontend_namespace }}" -f -
      ignore_errors: true

    - name: "deploy Graph Sync Scheduler for Amun"
      shell: oc process --namespace "{{ infra_namespace }}" graph-sync-scheduler-deployment \
        -p THOTH_SERVICE_ACCOUNT_NAME="inspector" \
        -p THOTH_SCHEDULER_NAMESPACE="{{ amun_inspection_namespace }}" \
        -p THOTH_GRAPH_SYNC_NAMESPACE="{{ amun_inspection_namespace }}" | oc apply --namespace "{{ amun_api_namespace }}" -f -
      ignore_errors: true

    - name: "deploy Build Watcher"
      shell: oc process --namespace "{{ infra_namespace }}" build-watcher-deployment \
        -p THOTH_WATCHED_NAMESPACE="{{ amun_inspection_namespace }}" \
        -p THOTH_USER_API_HOST="{{ thoth_user_api_host }}" | oc apply --namespace "{{ amun_api_namespace }}" -f -

    - name: "Create Cleanup Job"
      shell: oc process --namespace "{{ infra_namespace }}" cleanup-cronjob \
        -p THOTH_SUSPEND_JOB=false \
        -p THOTH_CLEANUP_NAMESPACE="{{ middletier_namespace }}" | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "Create Cleanup Job"
      shell: oc process --namespace "{{ infra_namespace }}" cleanup-cronjob \
        -p THOTH_SUSPEND_JOB=false \
        -p THOTH_CLEANUP_NAMESPACE="{{ backend_namespace }}" | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "Create Cleanup Job"
      shell: oc process --namespace "{{ infra_namespace }}" cleanup-cronjob \
        -p THOTH_SUSPEND_JOB=false \
        -p THOTH_CLEANUP_NAMESPACE="{{ amun_inspection_namespace }}" | oc apply --namespace "{{ amun_api_namespace }}" -f -

    - name: "creating Workload Operator ImageStream"
      shell: oc process --filename https://raw.githubusercontent.com/thoth-station/workload-operator/master/openshift/imageStream-template.yaml | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "creating Workload Operator BuildConfig"
      shell: oc process --filename https://raw.githubusercontent.com/thoth-station/workload-operator/master/openshift/buildConfig-template.yaml | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "deploying Workload Operator for Middletier"
      shell: oc process --filename https://raw.githubusercontent.com/thoth-station/workload-operator/master/openshift/deployment-template.yaml \
        -p THOTH_OPERATOR_NAMESPACE="{{ middletier_namespace }}" \
        -p THOTH_SERVICE_ACCOUNT_NAME="analyzer" | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "deploying Workload Operator for Backend"
      shell: oc process --filename https://raw.githubusercontent.com/thoth-station/workload-operator/master/openshift/deployment-template.yaml \
        -p THOTH_OPERATOR_NAMESPACE="{{ backend_namespace }}" \
        -p THOTH_SERVICE_ACCOUNT_NAME="analyzer" | oc apply --namespace "{{ frontend_namespace }}" -f -

    - name: "deploying Workload Operator for Amun"
      shell: oc process --filename https://raw.githubusercontent.com/thoth-station/workload-operator/master/openshift/deployment-template.yaml \
        -p THOTH_OPERATOR_NAMESPACE="{{ amun_inspection_namespace }}" \
        -p THOTH_SERVICE_ACCOUNT_NAME="analyzer" | oc apply --namespace "{{ amun_api_namespace }}" -f -